name: 'Azure Data Factory Deployment'

on:
  workflow_dispatch:
#  push:
#    branches:
#      - main
#  pull_request:

env:
  workingDir: '/azuredatafactory/src'
  workingDirARMParameters: '/azuredatafactory/'
  dataFactoryNameDev: 'adf-cicd-jtf-dev'
  dataFactoryNameStaging: 'adf-cicd-jtf-staging'
  dataFactoryNameProd: 'adf-cicd-jtf-prod'
  resourceGroupName: 'rg-datafactory-demo'

jobs:
  publish-adf-arm-templates:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Setup node
        uses: actions/setup-node@v3.5.0
        with:
          node-version: '18.x'
    
      - name: Install npm package
        working-directory: '${{ github.workspace }}/azuredatafactory/src'
        run: npm install

      - name: Validate
        working-directory: '${{ github.workspace }}/azuredatafactory/src'
        run: npm run build validate '${{ github.workspace }}/azuredatafactory/src' '/subscriptions/${{ secrets.AZURE_ADF_SUBSCRIPTIONID }}/resourceGroups/${{ env.resourceGroupName }}/providers/Microsoft.DataFactory/factories/${{ env.dataFactoryNameDev }}'
        
      - name: Generate ARM template
        working-directory: '${{ github.workspace }}/azuredatafactory/src'
        run: npm run build export '${{ github.workspace }}/azuredatafactory/src' '/subscriptions/${{ secrets.AZURE_ADF_SUBSCRIPTIONID }}/resourceGroups/${{ env.resourceGroupName }}/providers/Microsoft.DataFactory/factories/${{ env.dataFactoryNameDev }}' 'ARMTemplateOutput'

      - name: Copying CICD ARM Template Parameter Files
        run: cp -a '${{ github.workspace }}/azuredatafactory/cicd-parameters/.' '${{ github.workspace }}/azuredatafactory/src/ARMTemplateOutput'

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3.1.0
        with:
          name: datafactory
          path: '${{ github.workspace }}/azuredatafactory/src/ARMTemplateOutput'
          if-no-files-found: warn

  deploy-adf-development:
    runs-on: ubuntu-latest
    needs: publish-adf-arm-templates
    environment: development
    steps:    
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
          
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: datafactory

      - name: Deploy resources
        uses: Azure/data-factory-deploy-action@v1.2.0
        with:
          resourceGroupName: ${{ env.resourceGroupName }}
          dataFactoryName: ${{ env.dataFactoryNameDev }}
          armTemplateFile: ${{ format('{0}/{1}', github.workspace, 'ARMTemplateForFactory.json') }}
          armTemplateParametersFile: ${{ format('{0}/{1}', github.workspace, 'ARMTemplateParametersFactory-Development.json') }}

      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear

  deploy-adf-staging:
    runs-on: ubuntu-latest
    needs: deploy-adf-development
    environment: staging
    steps:    
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
          
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: datafactory

      - name: Deploy resources
        uses: Azure/data-factory-deploy-action@v1.2.0
        with:
          resourceGroupName: ${{ env.resourceGroupName }}
          dataFactoryName: ${{ env.dataFactoryNameStaging }}
          armTemplateFile: ${{ format('{0}/{1}', github.workspace, 'ARMTemplateForFactory.json') }}
          armTemplateParametersFile: ${{ format('{0}/{1}', github.workspace, 'ARMTemplateParametersFactory-Staging.json') }}

      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear

  deploy-adf-production:
    runs-on: ubuntu-latest
    needs: deploy-adf-staging
    environment: production
    steps:    
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
          
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: datafactory

      - name: Deploy resources
        uses: Azure/data-factory-deploy-action@v1.2.0
        with:
          resourceGroupName: ${{ env.resourceGroupName }}
          dataFactoryName: ${{ env.dataFactoryNameProd }}
          armTemplateFile: ${{ format('{0}/{1}', github.workspace, 'ARMTemplateForFactory.json') }}
          armTemplateParametersFile: ${{ format('{0}/{1}', github.workspace, 'ARMTemplateParametersFactory-Prod.json') }}

      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear
